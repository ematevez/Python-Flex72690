# -*- coding: utf-8 -*-
"""Clase1- 72690

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/102495dI9hQyLKGShEU6iADs189c8Yx_k
"""

print(type(2))
type(2)

"""print/type"""

2+2 # esto es un comentario

2
4

print(2)
print(4)

print(11//5)
print(2+2)

type(4)
type(3)

print(type(4))
print(type(3))

"""# Numeros
int -> 1, 2, 0 , -15  
float -> 1.5, 3.0, -4.54  
complex -> 11.5j, 33.0j, -6.74j
"""

print(type(1)) # int => integer => enteros
print(type(2.5)) # float => flotantes
print(type(2.5j)) # complex => complejos 5 + 3i => 5+3j ||| 2.5j => 2,5i

"""### Operadores aritmeticos"""

# Suma
print(3+3)

# Resta
print(3-3)

# Multiplicacion
print(3*3)

# Division decimal
print(5/3)

# Division Entera
print(5//3)

# Potenciacion
print(5**3)

# Modulo ( Resto de la division entera de 5 y 3 )
print(5%3)

"""### Expresión


5 + 5 * 12 / 3

### Precedencia

python ejecuta operacion de izq a derecha

---

() -> ** -> / // * %  -> + -

primero -> segundo -> tercero -> cuarto

---

1ro. ()

2do. **

3ro. * / // %

4to. + -

---

5 + 5 * 12 / 3 - 45 + 3 ** 5

5 + 5 * 12 / 3 - 45 + 243

5 + 20.0 - 45 + 243

223.0
"""

5 + 5 * 12 / 3 - 45 + 3 ** 5

"""5 + 5 * 12 / 3 - ( 45 + 3 ** 5 )

5 + 5 * 12 / 3 - ( 45 + 243 )

5 + 5 * 12 / 3 - 288

5 + 20 - 288

-263
"""

5 + 5 * 12 / 3 - ( 45 + 3 ** 5 )

"""# Cadenas de texto / string (Inmutables)

"""

'mama! cortaste la luz?'
"mama! cortaste la luz?"

"""el print muestra de una manera representativa para el humano el dato que se quiere mostrar."""

print(type("mama! cortaste la luz?"))
print(type('mama! cortaste la luz?'))
type('mama! cortaste la luz?')

print('mama! cortaste la luz')
print("mama! cortaste la luz")

# print('It is blue')
# print('It's blue')
print("It's blue")
print('It\'s blue')

print("Y Ricardo grito: mama! cortaste la luz")
# print("Y Ricardo grito: "mama! cortaste la luz"")
print('Y Ricardo grito: "mama! cortaste la luz"')
print("Y Ricardo grito: \"mama! cortaste la luz\"")

"""Esto que estamos haciendo con las comillas es lo que se llama escape de caracteres  
y hay muchos mas usos por ejemplo:
- para agregar una tabulacion `\t`
- o una bajada de linea `\n`
- etc
"""

print("'letras','palabras'")

print("'letras',\n'palabras'")

print("'letras',\t'palabras'")

print(r'C:\Users\cdbia\Desktop\71885') # => la r viene de raw => crudo
# print('C:\\Users\\cdbia\\Desktop\\71885')
r'C:\Users\cdbia\Desktop\71885'
'C:\\Users\\cdbia\\Desktop\\71885'

"""Y pero si yo quiero que el `\t` se muestre en el string y no que me lo escape"""

print(r"'letras',\t'palabras'")

print("C:\norma\tomas")

print(r"C:\norma\tomas")

"""Ahora bien, que pasa si quiero mostrar un string con formato pero no quiero tener que agregar escape de caracteres.  
Puedo?
"""

print('pepito\ncorre solo')

print('pepito corre solo')

print('''pepito corre solo''')

print("""tabu lacion""")

print("""
|nombre |apellido|edad|
|pepe   |grillo  |23  |
|ricardo|fort    |34  |
""")

# comentario
# de
# varias
# lineas

'''
comentario
de
varias
lineas
'''




# splitear string
print((
    'asd'
    "eee"
    "eaeaeaeae"
))

"""# Break"""

print(2+2)
print('Pepito Grillo')
print(2+2)

"""# Variables
Correctas
```
numero = 23  
edad_del_profe = 33
```
Incorrectas
```
edad del profe = 33
'edad del profe' = 33
```
"""

edad_del_profe = 33

numero = 23
print(numero)
edad_del_profe = 33
print(edad_del_profe)

suma = 2+2

print(suma)
print('Pepito Grillo')
print(suma)

"""---
### Formatos para nombrar una variable
---
snake_case -> Por cada palabra que contenga el nombre de la variable, las vas a escribir en minuscula y para separarlas vas aponer un _  ( definir variables, funciones, etc... algunas se ven mas adelante)

edad_de_pepe = 25

---

PascalCase -> Por cada palabra que contenga el nombre de la variable su primer letra iria enb mayuscula y no tendrian separador ( definir Clases... se ven mas adelante )

EdadDePepe = 25

---

camelCase -> Casi igual a PascalCase con la diferencia que la primer letra siempre va en minuscula ( se suele utiliar en otros lenguajes )

edadDePepe = 25

---
"""

x = 5 + 5
x = 'pepe corre solo por la pradera'
print(x)
y = 'oso'
print(y)

suma = 5 + 5
print(suma)
animal = 'oso'
print(animal)

"""Asignacion multiple"""

# numero_de_clase = 34655
# cantidad_alumnos = 121
# asd = 123


numero_de_clase, cantidad_alumnos, asd = 34655, 121, 123
print(numero_de_clase)
print(cantidad_alumnos)

x = 2
y = 1

y, x = x, y

valor1 = 1
valor2 = 2
valor3 = valor1
valor1 = valor2
valor2 = valor3
print(valor1)
print(valor2)

valor1 = 1
valor2 = 2
valor2, valor1 = valor1, valor2
print(valor1)
print(valor2)

"""
Python es case sensitive"""

var = 'variable'
vaR = 'Variable'
VaR = 'VariablE'
print(var)
print(vaR)
print(VaR)
var = 'var'
print(var)
var = 2
print(var)

"""# input

Siempre devuelve/retorna un string
"""

input()

input('Ingrese nombre: ')

nombre = input('Ingrese nombre: ')
print(nombre)

input('Ingresa un numero: ')

5

numero = input('Ingresa un numero: ')
numero
# print(numero)

numero = input('Ingresa un numero: ')
print(type(numero))

numero = input('Ingresa un numero: ')
print(type(numero))
print(type(5))
print(numero + 5)

"""### Castear"""

str(5)
int('123')
float('2.5')

# int(aca el valor que queremos transformar a entero)
# numero = input('Ingresa un numero: ')
numero = int(input('Ingresa un numero: '))
print(type(numero))
print(type(5))
print(numero + 5)

# float(aca el valor que queremos transformar a flotante/decimal)
numero = float(input('Ingresa un numero: '))
print(type(numero))
print(type(5.5))
print(numero + 5)

# str(aca el valor que queremos transformar a string/cadena de texto)
numero = str(2+2)
print(type(numero))
print(type('4'))
print(type(4))
# print(numero + 5)
# print(5 + numero)

"""### Operacion con variables"""

nombre = 'Ricardo'
apellido = 'Fort'
numero1 = 5
numero2 = 15

# Sumar, Restar, Multiplicar, etc
print(numero1 + numero2 * numero1)

# Concatenar
# print(nombre + apellido)
# print(nombre + ' ' + apellido)
# f'Esto es un {nombre} y ahora voy a mostrar {numero1 + numero2 * numero1} de python ejecutado {2+2}'
# 'Esto es un {} y ahora voy a mostrar {} de python ejecutado {}'.format(nombre, numero1 + numero2 * numero1, 2+2)
# print(f'{nombre} {apellido} asdasdasdasdasdasdasdasdasdasdasdasdasdse {2+2}')
# print(nombre, apellido, 2, 15, 4.5)
# variable = nombre, apellido
# print(variable)

# Repetir String
print(nombre * numero1)
print(nombre * apellido) # Rompe
print('pepe ' * 4)

"""len"""

palabra = 'roca'
# len(palabra)
print(len('Probando los indices')) # len(valor a contar)
print(len(palabra))

print(len("asdasdasdasdasd"))

"""### index"""

texto = 'Probando los indices'
#        0123456789...
#                  ...7654321 negativos

palabra = 'roca'
        #  0123 -->
        #  4321 <--

print('texto[0] >>', texto[0])
print("'Probando los indices'[3] >>", 'Probando los indices'[3])
print('texto[8] >>', texto[8])
print('texto[-1] >>', texto[-1])
print('texto[19] >>', texto[19])
# print('texto[20] >>', texto[20])
# print('texto[-21] >>', texto[-21])

palabra = 'roca asdasdasdasdasd'
# palabra[1] = 'a'
palabra = 'raca'
palabra = palabra[0] + 'a' + palabra[2] + palabra[3]
print(palabra)
# palabra = palabra[0] + 'a' + palabra[2:]

"""Slicing"""

texto = 'Probando el slicing'

print(texto)
# print(texto[4])

# variable/string[<inicio>:<final>:<el salto(este es opcional)>]
# print('texto[4:] >>', texto[4:])
# print('texto[:8] >>', texto[:8])
# print('texto[4:19] >>', texto[4:19])
# print('texto[4:10] >>', texto[4:10])
# print('texto[-5:-2] >>', texto[-5:-2])
# print('texto[-2:-5] >>', texto[-2:-5]) # no toma nada porque quiere ir de un valor para la parte anterior de la cadena de caracteres
# print('texto[2::2] >>', texto[2::2])
# print('texto[3:12:7] >>', texto[3:12:7])
# print('texto[::-1] >>', texto[::-1])
# print('texto >>', texto)

print('texto[::] >>', texto[::])
print('texto[-5::] >>', texto[-5::])
print('texto[:-5:] >>', texto[:-5:])
print('texto[2:-5:] >>', texto[2:-5:])
print('texto[-2:-5:] >>', texto[-2:-5:])
print('texto[-2:-5:] >>', texto[-5:-2:])
print('texto[-5:-2:-1] >>', texto[-5:-2:-1])
print('texto[-2:-5:-1] >>', texto[-2:-5:-1])
print('texto[-2:-5:-2] >>', texto[-2:-5:-2])

# print('[::] >>', 'hola soy ricardo fort el comandante'[::])
# print('[2::] >>', 'hola soy ricardo fort el comandante'[2::])
# print('[2:6:] >>', 'hola soy ricardo fort el comandante'[2:6:])
# print('[2:14:2] >>', 'hola soy ricardo fort el comandante'[2:14:2])
# print('[2:14] >>', 'hola soy ricardo fort el comandante'[2:14])
# print('[6:] >>', 'hola soy ricardo fort el comandante'[6:])
# print('[:14] >>', 'hola soy ricardo fort el comandante'[:14])
# print('[::-1] >>', 'hola soy ricardo fort el comandante'[::-1])
# print('[-15:-6:] >>', 'hola soy ricardo fort el comandante'[-15:-6:])

"""### Inmutabilidad"""

texto = 'palabras de mas'
# texto = 'pepito'

# texto[-2] = 'e'
texto_cortado = texto[0:2] + 's' + texto[-1]
print(texto_cortado)
# texto_distinto = texto[:-3] + 'menos'
# texto = texto[:-3] + 'menos'
print(texto)
# print(texto_distinto)

"""## Desafío Números (10 min)
Descripción de la actividad.

En nuestro trabajo, nos solicitan desarrollar un programa que permita calcular el promedio final de los equipos de futbol en un torneo.
Para ello, debemos considerar tres aspectos:

jugaron 20 partidos durante el torneo,
los partidos poseen diferente puntaje según el resultado, los partidos ganados 3 puntos, partido empatado 1 punto, partido perdido 0 puntos,
el promedio final resulta de la cantidad de puntos totales divididos la cantidad de partidos

La cantidad de partidos que debemos considerar a un equipo para el ejemplo se detallan a continuación:

partidos_ganados 8
partido_empatados 7
partido_perdidos 5

Importante: Cada una de las cantidades de partidos ganados, empatados o perdidos debe solicitarse al usuario utilizando la función input().

"""

partidos_jugados = 20
puntaje_partido_ganado = 3
puntaje_partido_empatado = 1
puntaje_partido_perdido = 0

partidos_ganados = int(input("Ingrese cantidad de partidos ganados: "))
partidos_empatados = int(input("Ingrese cantidad de partidos empatados: "))
partidos_perdidos = int(input("Ingrese cantidad de partidos perdidos: "))

puntos_totales = partidos_ganados * puntaje_partido_ganado + partidos_empatados * puntaje_partido_empatado + partidos_perdidos * puntaje_partido_perdido

promedio_final = puntos_totales / partidos_jugados

print('El promedio final de tu equipo fue', promedio_final)

cant_partidos_jug = 20
puntaje_ganado = 3
puntaje_empatado = 1

total_de_puntos = 8 * puntaje_ganado + 7 * puntaje_empatado

promedio = total_de_puntos / cant_partidos_jug

print(f"El promedio es de {promedio}")

partidos_jugados = 20

puntaje_ganado = 10
puntaje_empatado = 5
puntaje_perdido = 1

partidos_ganados = int(input('Cuantos partidos gano tu equipo: '))
partidos_perdidos = int(input('Cuantos partidos perdio tu equipo: '))
partidos_empatados = int(input('Cuantos partidos empato tu equipo: '))

promedio = (partidos_ganados * puntaje_ganado + partidos_empatados) / partidos_jugados

print(f'El promedio de puntos por patido obetnidos fue {promedio}')
print('El promedio de puntos por patido obetnidos fue', promedio)

cantidad_partidos_del_torneo = 20
puntaje_partidos_ganados = 3
puntaje_partidos_empatados = 1
puntaje_partidos_perdidos = 0

partidos_ganados = float(input('Cantidad de partidos ganados: '))
partidos_empatados = float(input('Cantidad de partidos empatados: '))
partidos_perdidos = float(input('Cantidad de partidos perdidos: '))

puntaje_total = partidos_ganados * puntaje_partidos_ganados + partidos_empatados * puntaje_partidos_empatados + partidos_perdidos * puntaje_partidos_perdidos

promedio = puntaje_total / cantidad_partidos_del_torneo

print(promedio)

"""# Desafío String (10 min)

Dadas cuatro variables con diferentes textos (de forma individual), genera una nueva variable con el siguiente contenido:

Objetivo: “Python es un lenguaje de programación versátil”

Partiendo de:

cadena_1  = “versátil”

cadena_2  = “Python”

cadena_3  = “es un lenguaje”

cadena_4  = “de programación”

"""

cadena_1 = 'versátil'
cadena_2 = 'Python'
cadena_3 = 'es un lenguaje'
cadena_4 = 'de programación'

print(cadena_2, cadena_3, cadena_4, cadena_1)

cadena = f'{cadena_2} {cadena_3} {cadena_4} {cadena_1}'
cadena = cadena_2 + ' ' + cadena_3 + ' ' + cadena_4 + ' ' + cadena_1
print(cadena)

"""
# Desafío Slicing (10 min)
Se tiene una cadena de texto, pero al revés. Al parecer contiene el nombre de un alumno, la nota de un exámen y la materia.
De forma individual, realiza lo siguiente:
1. Dar vuelta la cadena y asignarla a una variable llamada cadena_volteada. Para devolver una cadena dada vuelta se usa el tercer índice negativo con slicing: cadena[::-1].
2. Extraer nombre y apellido, almacenarlo en una variable llamada nombre_alumno
3. Extraer la nota y almacenarla en una variable llamada nota.
4. Extraer la materia y almacenarla en una variable llamada materia.
5. Mostrar por pantalla la siguiente estructura:
😎NOMBRE APELLIDO ha sacado un NOTA en MATERIA. Esto ultimo hacerlo, formateando las anteriores variables en una variable llamada cadena_formateada

cadena = “acitametaM ,5.8 ,otipeP ordeP”"""

cadena = "acitametaM ,5.8 ,otipeP ordeP"
# 1
cadena_volteada = cadena[::-1]
print(cadena_volteada)
# 2
nombre_alumno = cadena_volteada[:12]
print(nombre_alumno)
# 3
nota = cadena_volteada[14:17]
print(nota)
# 4
materia = cadena_volteada[19:]
print(materia)
# 5
cadena_formateada = f'😎{nombre_alumno} ha sacado un {nota} en {materia}'
cadena_formateada = '😎' + nombre_alumno + ' ha sacado un ' + {nota} + ' en ' + {materia}
print(cadena_formateada)

"""---
---
# Extra
---
---

## Mi primer programa en Python

Consigna

Trabajas en Coderhouse y te piden crear un programa que calcule la nota final de estudiantes del curso de Python. La nota final se calcula basándonos en tres notas previas de las cuales, cada una corresponde un porcentaje distinto de la nota final. Los porcentajes se detallan a continuación:
- nota_1  cuenta como el 20% de la nota final
- nota_2 cuenta como el 30% de la nota final
- nota_3 cuenta como el 50% de la nota final
"""

nota_1 = float(input('Ingresa la primer nota del alumno/a: '))
nota_2 = float(input('Ingresa la segunda nota del alumno/a: '))
nota_3 = float(input('Ingresa la tercera nota del alumno/a: '))

nota_final = nota_1 * 0.2 + nota_2 * 0.3 + nota_3 * 0.5
print(f'Esta es la nota final {nota_final}')